{"version":3,"file":"server.js","mappings":"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","sources":["webpack://github-cognito-openid-wrapper/./src/config.js","webpack://github-cognito-openid-wrapper/./src/connectors/controllers.js","webpack://github-cognito-openid-wrapper/./src/connectors/logger.js","webpack://github-cognito-openid-wrapper/./src/connectors/web/auth.js","webpack://github-cognito-openid-wrapper/./src/connectors/web/handlers.js","webpack://github-cognito-openid-wrapper/./src/connectors/web/responder.js","webpack://github-cognito-openid-wrapper/./src/connectors/web/routes.js","webpack://github-cognito-openid-wrapper/./src/crypto.js","webpack://github-cognito-openid-wrapper/./src/github.js","webpack://github-cognito-openid-wrapper/./src/helpers.js","webpack://github-cognito-openid-wrapper/./src/openid.js","webpack://github-cognito-openid-wrapper/./src/validate-config.js","webpack://github-cognito-openid-wrapper/./jwtRS256.key","webpack://github-cognito-openid-wrapper/./jwtRS256.key.pub","webpack://github-cognito-openid-wrapper/external commonjs \"axios\"","webpack://github-cognito-openid-wrapper/external commonjs \"body-parser\"","webpack://github-cognito-openid-wrapper/external commonjs \"colors\"","webpack://github-cognito-openid-wrapper/external commonjs \"express\"","webpack://github-cognito-openid-wrapper/external commonjs \"json-web-key\"","webpack://github-cognito-openid-wrapper/external commonjs \"jsonwebtoken\"","webpack://github-cognito-openid-wrapper/external commonjs \"winston\"","webpack://github-cognito-openid-wrapper/external commonjs \"winston-splunk-httplogger\"","webpack://github-cognito-openid-wrapper/external node-commonjs \"util\"","webpack://github-cognito-openid-wrapper/webpack/bootstrap","webpack://github-cognito-openid-wrapper/./src/connectors/web/app.js"],"sourcesContent":["module.exports = {\n  GITHUB_CLIENT_ID: process.env.GITHUB_CLIENT_ID,\n  GITHUB_CLIENT_SECRET: process.env.GITHUB_CLIENT_SECRET,\n  COGNITO_REDIRECT_URI: process.env.COGNITO_REDIRECT_URI,\n  GITHUB_API_URL: process.env.GITHUB_API_URL,\n  GITHUB_LOGIN_URL: process.env.GITHUB_LOGIN_URL,\n  PORT: parseInt(process.env.PORT, 10) || undefined,\n\n  // Splunk logging variables\n  SPLUNK_URL: process.env.SPLUNK_URL,\n  SPLUNK_TOKEN: process.env.SPLUNK_TOKEN,\n  SPLUNK_SOURCE: process.env.SPLUNK_SOURCE,\n  SPLUNK_SOURCETYPE: process.env.SPLUNK_SOURCETYPE,\n  SPLUNK_INDEX: process.env.SPLUNK_INDEX,\n};\n","const logger = require('./logger');\nconst openid = require('../openid');\n\nmodule.exports = (respond) => ({\n  authorize: (client_id, scope, state, response_type) => {\n    const authorizeUrl = openid.getAuthorizeUrl(\n      client_id,\n      scope,\n      state,\n      response_type\n    );\n    logger.info('Redirecting to authorizeUrl');\n    logger.debug('Authorize Url is: %s', authorizeUrl, {});\n    respond.redirect(authorizeUrl);\n  },\n  userinfo: (tokenPromise) => {\n    tokenPromise\n      .then((token) => openid.getUserInfo(token))\n      .then((userInfo) => {\n        logger.debug('Resolved user infos:', userInfo, {});\n        respond.success(userInfo);\n      })\n      .catch((error) => {\n        logger.error(\n          'Failed to provide user info: %s',\n          error.message || error,\n          {}\n        );\n        respond.error(error);\n      });\n  },\n  token: (code, state, host) => {\n    if (code) {\n      openid\n        .getTokens(code, state, host)\n        .then((tokens) => {\n          logger.debug(\n            'Token for (%s, %s, %s) provided',\n            code,\n            state,\n            host,\n            {}\n          );\n          respond.success(tokens);\n        })\n        .catch((error) => {\n          logger.error(\n            'Token for (%s, %s, %s) failed: %s',\n            code,\n            state,\n            host,\n            error.message || error,\n            {}\n          );\n          respond.error(error);\n        });\n    } else {\n      const error = new Error('No code supplied');\n      logger.error(\n        'Token for (%s, %s, %s) failed: %s',\n        code,\n        state,\n        host,\n        error.message || error,\n        {}\n      );\n      respond.error(error);\n    }\n  },\n  jwks: () => {\n    const jwks = openid.getJwks();\n    logger.info('Providing access to JWKS: %j', jwks, {});\n    respond.success(jwks);\n  },\n  openIdConfiguration: (host) => {\n    const config = openid.getConfigFor(host);\n    logger.info('Providing configuration for %s: %j', host, config, {});\n    respond.success(config);\n  },\n});\n","const winston = require('winston');\nconst {\n  SPLUNK_URL,\n  SPLUNK_TOKEN,\n  SPLUNK_SOURCE,\n  SPLUNK_SOURCETYPE,\n  SPLUNK_INDEX,\n} = require('../config');\n\nconst logger = winston.createLogger({\n  level: 'info',\n});\n\n// Activate Splunk logging if Splunk's env variables are set\nif (SPLUNK_URL) {\n  const SplunkStreamEvent = require('winston-splunk-httplogger'); // eslint-disable-line global-require\n\n  const splunkSettings = {\n    url: SPLUNK_URL || 'localhost',\n    token: SPLUNK_TOKEN,\n    source: SPLUNK_SOURCE || '/var/log/GHOIdShim.log',\n    sourcetype: SPLUNK_SOURCETYPE || 'github-cognito-openid-wrapper',\n    index: SPLUNK_INDEX || 'main',\n    maxBatchCount: 1,\n  };\n\n  logger.add(\n    new SplunkStreamEvent({\n      splunk: splunkSettings,\n      format: winston.format.combine(\n        winston.format.splat(),\n        winston.format.timestamp()\n      ),\n    })\n  );\n} else {\n  // STDOUT logging for dev/regular servers\n  logger.add(\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.splat(),\n        winston.format.colorize({ all: true }),\n        winston.format.simple()\n      ),\n    })\n  );\n}\n\nmodule.exports = logger;\n","module.exports = {\n  getBearerToken: (req) =>\n    new Promise((resolve, reject) => {\n      // This method implements https://tools.ietf.org/html/rfc6750\n      const authHeader = req.get('Authorization');\n      if (authHeader) {\n        // Section 2.1 Authorization request header\n        // Should be of the form 'Bearer <token>'\n        // We can ignore the 'Bearer ' bit\n        resolve(authHeader.split(' ')[1]);\n      } else if (req.query.access_token) {\n        // Section 2.3 URI query parameter\n        resolve(req.query.access_token);\n      } else if (\n        req.get('Content-Type') === 'application/x-www-form-urlencoded'\n      ) {\n        // Section 2.2 form encoded body parameter\n        resolve(req.body.access_token);\n      }\n      reject(new Error('No token specified in request'));\n    }),\n\n  getIssuer: (host) => `${host}`,\n};\n","const responder = require('./responder');\nconst auth = require('./auth');\nconst controllers = require('../controllers');\n\nmodule.exports = {\n  userinfo: (req, res) => {\n    controllers(responder(res)).userinfo(auth.getBearerToken(req));\n  },\n  token: (req, res) => {\n    const code = req.body.code || req.query.code;\n    const state = req.body.state || req.query.state;\n\n    controllers(responder(res)).token(code, state, req.get('host'));\n  },\n  jwks: (req, res) => controllers(responder(res)).jwks(),\n  authorize: (req, res) =>\n    responder(res).redirect(\n      `https://github.com/login/oauth/authorize?client_id=${req.query.client_id}&scope=${req.query.scope}&state=${req.query.state}&response_type=${req.query.response_type}`\n    ),\n  openIdConfiguration: (req, res) => {\n    controllers(responder(res)).openIdConfiguration(\n      auth.getIssuer(req.get('host'))\n    );\n  },\n};\n","const util = require('util');\n\nrequire('colors');\n\nmodule.exports = (res) => ({\n  success: (data) => {\n    res.format({\n      'application/json': () => {\n        res.json(data);\n      },\n      default: () => {\n        res.status(406).send('Not Acceptable');\n      },\n    });\n  },\n  error: (error) => {\n    res.statusCode = 400;\n    res.end(`Failure: ${util.inspect(error.message)}`);\n  },\n  redirect: (url) => res.redirect(url),\n});\n","const handlers = require('./handlers');\n\nmodule.exports = (app) => {\n  app.get('/userinfo', handlers.userinfo);\n  app.post('/userinfo', handlers.userinfo);\n  app.get('/token', handlers.token);\n  app.post('/token', handlers.token);\n  app.get('/authorize', handlers.authorize);\n  app.post('/authorize', handlers.authorize);\n  app.get('/jwks.json', handlers.jwks);\n  app.get('/.well-known/jwks.json', handlers.jwks);\n  app.get('/.well-known/openid-configuration', handlers.openIdConfiguration);\n};\n","const JSONWebKey = require('json-web-key');\nconst jwt = require('jsonwebtoken');\nconst { GITHUB_CLIENT_ID } = require('./config');\nconst logger = require('./connectors/logger');\n\nconst KEY_ID = 'jwtRS256';\nconst cert = require('../jwtRS256.key');\nconst pubKey = require('../jwtRS256.key.pub');\n\nmodule.exports = {\n  getPublicKey: () => ({\n    alg: 'RS256',\n    kid: KEY_ID,\n    ...JSONWebKey.fromPEM(pubKey).toJSON(),\n  }),\n\n  makeIdToken: (payload, host) => {\n    const enrichedPayload = {\n      ...payload,\n      iss: `https://${host}`,\n      aud: GITHUB_CLIENT_ID,\n    };\n    logger.debug('Signing payload %j', enrichedPayload, {});\n    return jwt.sign(enrichedPayload, cert, {\n      expiresIn: '1h',\n      algorithm: 'RS256',\n      keyid: KEY_ID,\n    });\n  },\n};\n","const axios = require('axios');\nconst {\n  GITHUB_CLIENT_ID,\n  GITHUB_CLIENT_SECRET,\n  COGNITO_REDIRECT_URI,\n  GITHUB_API_URL,\n  GITHUB_LOGIN_URL,\n} = require('./config');\nconst logger = require('./connectors/logger');\n\nconst getApiEndpoints = (\n  apiBaseUrl = GITHUB_API_URL,\n  loginBaseUrl = GITHUB_LOGIN_URL\n) => ({\n  userDetails: `${apiBaseUrl}/user`,\n  userEmails: `${apiBaseUrl}/user/emails`,\n  oauthToken: `${loginBaseUrl}/login/oauth/access_token`,\n  oauthAuthorize: `${loginBaseUrl}/login/oauth/authorize`,\n});\n\nconst check = (response) => {\n  logger.debug('Checking response: %j', response, {});\n  if (response.data) {\n    if (response.data.error) {\n      throw new Error(\n        `GitHub API responded with a failure: ${response.data.error}, ${response.data.error_description}`\n      );\n    } else if (response.status === 200) {\n      return response.data;\n    }\n  }\n  throw new Error(\n    `GitHub API responded with a failure: ${response.status} (${response.statusText})`\n  );\n};\n\nconst gitHubGet = (url, accessToken) =>\n  axios({\n    method: 'get',\n    url,\n    headers: {\n      Accept: 'application/vnd.github.v3+json',\n      Authorization: `token ${accessToken}`,\n    },\n  });\n\nmodule.exports = (apiBaseUrl, loginBaseUrl) => {\n  const urls = getApiEndpoints(apiBaseUrl, loginBaseUrl || apiBaseUrl);\n  return {\n    getAuthorizeUrl: (client_id, scope, state, response_type) =>\n      `${urls.oauthAuthorize}?client_id=${client_id}&scope=${encodeURIComponent(\n        scope\n      )}&state=${state}&response_type=${response_type}`,\n    getUserDetails: (accessToken) =>\n      gitHubGet(urls.userDetails, accessToken).then(check),\n    getUserEmails: (accessToken) =>\n      gitHubGet(urls.userEmails, accessToken).then(check),\n    getToken: (code, state) => {\n      const data = {\n        // OAuth required fields\n        grant_type: 'authorization_code',\n        redirect_uri: COGNITO_REDIRECT_URI,\n        client_id: GITHUB_CLIENT_ID,\n        // GitHub Specific\n        response_type: 'code',\n        client_secret: GITHUB_CLIENT_SECRET,\n        code,\n        // State may not be present, so we conditionally include it\n        ...(state && { state }),\n      };\n\n      logger.debug(\n        'Getting token from %s with data: %j',\n        urls.oauthToken,\n        data,\n        {}\n      );\n      return axios({\n        method: 'post',\n        url: urls.oauthToken,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        data,\n      }).then(check);\n    },\n  };\n};\n","module.exports = {\n  NumericDate: (date) => Math.floor(date / 1000),\n};\n","const logger = require('./connectors/logger');\nconst { NumericDate } = require('./helpers');\nconst crypto = require('./crypto');\nconst github = require('./github');\n\nconst getJwks = () => ({ keys: [crypto.getPublicKey()] });\n\nconst getUserInfo = (accessToken) =>\n  Promise.all([\n    github()\n      .getUserDetails(accessToken)\n      .then((userDetails) => {\n        logger.debug('Fetched user details: %j', userDetails, {});\n        // Here we map the github user response to the standard claims from\n        // OpenID. The mapping was constructed by following\n        // https://developer.github.com/v3/users/\n        // and http://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\n        const claims = {\n          sub: `${userDetails.id}`, // OpenID requires a string\n          name: userDetails.name,\n          preferred_username: userDetails.login,\n          profile: userDetails.html_url,\n          picture: userDetails.avatar_url,\n          website: userDetails.blog,\n          updated_at: NumericDate(\n            // OpenID requires the seconds since epoch in UTC\n            new Date(Date.parse(userDetails.updated_at))\n          ),\n        };\n        logger.debug('Resolved claims: %j', claims, {});\n        return claims;\n      }),\n    github()\n      .getUserEmails(accessToken)\n      .then((userEmails) => {\n        logger.debug('Fetched user emails: %j', userEmails, {});\n        const primaryEmail = userEmails.find((email) => email.primary);\n        if (primaryEmail === undefined) {\n          throw new Error('User did not have a primary email address');\n        }\n        const claims = {\n          email: primaryEmail.email,\n          email_verified: primaryEmail.verified,\n        };\n        logger.debug('Resolved claims: %j', claims, {});\n        return claims;\n      }),\n  ]).then((claims) => {\n    const mergedClaims = claims.reduce(\n      (acc, claim) => ({ ...acc, ...claim }),\n      {}\n    );\n    logger.debug('Resolved combined claims: %j', mergedClaims, {});\n    return mergedClaims;\n  });\n\nconst getAuthorizeUrl = (client_id, scope, state, response_type) =>\n  github().getAuthorizeUrl(client_id, scope, state, response_type);\n\nconst getTokens = (code, state, host) =>\n  github()\n    .getToken(code, state)\n    .then((githubToken) => {\n      logger.debug('Got token: %s', githubToken, {});\n      // GitHub returns scopes separated by commas\n      // But OAuth wants them to be spaces\n      // https://tools.ietf.org/html/rfc6749#section-5.1\n      // Also, we need to add openid as a scope,\n      // since GitHub will have stripped it\n      const scope = `openid ${githubToken.scope.replace(',', ' ')}`;\n\n      // ** JWT ID Token required fields **\n      // iss - issuer https url\n      // aud - audience that this token is valid for (GITHUB_CLIENT_ID)\n      // sub - subject identifier - must be unique\n      // ** Also required, but provided by jsonwebtoken **\n      // exp - expiry time for the id token (seconds since epoch in UTC)\n      // iat - time that the JWT was issued (seconds since epoch in UTC)\n\n      return new Promise((resolve) => {\n        const payload = {\n          // This was commented because Cognito times out in under a second\n          // and generating the userInfo takes too long.\n          // It means the ID token is empty except for metadata.\n          //  ...userInfo,\n        };\n\n        const idToken = crypto.makeIdToken(payload, host);\n        const tokenResponse = {\n          ...githubToken,\n          scope,\n          id_token: idToken,\n        };\n\n        logger.debug('Resolved token response: %j', tokenResponse, {});\n\n        resolve(tokenResponse);\n      });\n    });\n\nconst getConfigFor = (host) => ({\n  issuer: `https://${host}`,\n  authorization_endpoint: `https://${host}/authorize`,\n  token_endpoint: `https://${host}/token`,\n  token_endpoint_auth_methods_supported: [\n    'client_secret_basic',\n    'private_key_jwt',\n  ],\n  token_endpoint_auth_signing_alg_values_supported: ['RS256'],\n  userinfo_endpoint: `https://${host}/userinfo`,\n  // check_session_iframe: 'https://server.example.com/connect/check_session',\n  // end_session_endpoint: 'https://server.example.com/connect/end_session',\n  jwks_uri: `https://${host}/.well-known/jwks.json`,\n  // registration_endpoint: 'https://server.example.com/connect/register',\n  scopes_supported: ['openid', 'read:user', 'user:email'],\n  response_types_supported: [\n    'code',\n    'code id_token',\n    'id_token',\n    'token id_token',\n  ],\n\n  subject_types_supported: ['public'],\n  userinfo_signing_alg_values_supported: ['none'],\n  id_token_signing_alg_values_supported: ['RS256'],\n  request_object_signing_alg_values_supported: ['none'],\n  display_values_supported: ['page', 'popup'],\n  claims_supported: [\n    'sub',\n    'name',\n    'preferred_username',\n    'profile',\n    'picture',\n    'website',\n    'email',\n    'email_verified',\n    'updated_at',\n    'iss',\n    'aud',\n  ],\n});\n\nmodule.exports = {\n  getTokens,\n  getUserInfo,\n  getJwks,\n  getConfigFor,\n  getAuthorizeUrl,\n};\n","const config = require('./config');\n\nconst ensureString = (variableName) => {\n  if (typeof config[variableName] !== 'string') {\n    throw new Error(\n      `Environment variable ${variableName} must be set and be a string`\n    );\n  }\n};\n\nconst ensureNumber = (variableName) => {\n  if (typeof config[variableName] !== 'number') {\n    throw new Error(\n      `Environment variable ${variableName} must be set and be a number`\n    );\n  }\n};\n\nconst requiredStrings = [\n  'GITHUB_CLIENT_ID',\n  'GITHUB_CLIENT_SECRET',\n  'COGNITO_REDIRECT_URI',\n];\n\nconst requiredNumbers = ['PORT'];\n\nmodule.exports = () => {\n  requiredStrings.forEach(ensureString);\n  requiredNumbers.forEach(ensureNumber);\n};\n","module.exports = \"-----BEGIN RSA PRIVATE KEY-----\\n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\\n-----END RSA PRIVATE KEY-----\\n\"","module.exports = \"-----BEGIN PUBLIC KEY-----\\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAuDhX6/fkDEVJTRJR0UDb\\njysAaF7nSDlXXkmkRZGAcd5Bq/ehpRLEbvBURo53V1MfZZYlohd/usshokzoidaI\\nM+kT1niqAUJ8jLakaCR7pBPDYe4Fjm3H9+A2lwoH6DDBsHSqt2l5+QzS5Uinhf9d\\nAshovZAWvdJC8L9E9mS+p1ZAtbgGteqiBRC2LI+nqTNmYe+tmyMeOXE0smaf7AKf\\nPlIfByF5nEHET4Nn90mE0qzY0yr+u3905cYpKMEQRQA49yZWPtAjunSHLk3bHncb\\noReHoHt+oyzP1fbWU7sdzCQIGnKJ4plMz9uExtd9CE8fmyKR5Xdu88txf7tL2H3y\\nij8Wh1PzwBJiPKiWSGYYv6bUNJuHAo2/2wziB7kOQpYc8Rdaxr6AK7pO3ULpEpdi\\nLk3loPp8x3eunk8OJ+7obD7yp5kCts7dnacZzNGFaRAiRsi8OjXIjpbS1STnj/yX\\nh2j27fbHK+UE68NijJMphjRXvzX+LHcmWF2Zy4cExvPmoCfVOlnpenoYlVN4DIFX\\nGLbl7t6+Mm3LPYJI6iWCewtgnjrRR+TP+1LIRHRh9EjGrjN8ud8yAnjermR7+buL\\nrFVxMeC5TkZrxpv57BBDnUY3PAgWsv8jiIwWNcqJmKTYM8Qt+8KMMwmJ1rZhaSmu\\n9nd3oJFGsyB/CwF82bL3Eq0CAwEAAQ==\\n-----END PUBLIC KEY-----\\n\"","module.exports = require(\"axios\");","module.exports = require(\"body-parser\");","module.exports = require(\"colors\");","module.exports = require(\"express\");","module.exports = require(\"json-web-key\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"winston\");","module.exports = require(\"winston-splunk-httplogger\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const express = require('express');\nconst bodyParser = require('body-parser');\nconst routes = require('./routes');\nconst { PORT } = require('../../config');\nconst validateConfig = require('../../validate-config');\n\nrequire('colors');\n\nconst app = express();\n\ntry {\n  validateConfig();\n} catch (e) {\n  console.error('Failed to start:'.red, e.message);\n  console.error('  See the readme for configuration information');\n  process.exit(1);\n}\nconsole.info('Config is valid'.cyan);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\nroutes(app);\napp.listen(PORT);\nconsole.info(`Listening on ${PORT}`.cyan);\n"],"names":["module","exports","GITHUB_CLIENT_ID","process","env","GITHUB_CLIENT_SECRET","COGNITO_REDIRECT_URI","GITHUB_API_URL","GITHUB_LOGIN_URL","PORT","parseInt","undefined","SPLUNK_URL","SPLUNK_TOKEN","SPLUNK_SOURCE","SPLUNK_SOURCETYPE","SPLUNK_INDEX","logger","require","openid","respond","authorize","client_id","scope","state","response_type","authorizeUrl","getAuthorizeUrl","info","debug","redirect","userinfo","tokenPromise","then","token","getUserInfo","userInfo","success","catch","error","message","code","host","getTokens","tokens","Error","jwks","getJwks","openIdConfiguration","config","getConfigFor","winston","createLogger","level","SplunkStreamEvent","splunkSettings","url","source","sourcetype","index","maxBatchCount","add","splunk","format","combine","splat","timestamp","transports","Console","colorize","all","simple","getBearerToken","req","Promise","resolve","reject","authHeader","get","split","query","access_token","body","getIssuer","responder","auth","controllers","res","util","data","application/json","json","default","status","send","statusCode","end","inspect","handlers","app","post","JSONWebKey","jwt","KEY_ID","cert","pubKey","getPublicKey","alg","kid","fromPEM","toJSON","makeIdToken","payload","enrichedPayload","iss","aud","sign","expiresIn","algorithm","keyid","axios","getApiEndpoints","apiBaseUrl","loginBaseUrl","userDetails","userEmails","oauthToken","oauthAuthorize","check","response","error_description","statusText","gitHubGet","accessToken","method","headers","Accept","Authorization","urls","encodeURIComponent","getUserDetails","getUserEmails","getToken","grant_type","redirect_uri","client_secret","NumericDate","date","Math","floor","crypto","github","keys","claims","sub","id","name","preferred_username","login","profile","html_url","picture","avatar_url","website","blog","updated_at","Date","parse","primaryEmail","find","email","primary","email_verified","verified","mergedClaims","reduce","acc","claim","githubToken","replace","idToken","tokenResponse","id_token","issuer","authorization_endpoint","token_endpoint","token_endpoint_auth_methods_supported","token_endpoint_auth_signing_alg_values_supported","userinfo_endpoint","jwks_uri","scopes_supported","response_types_supported","subject_types_supported","userinfo_signing_alg_values_supported","id_token_signing_alg_values_supported","request_object_signing_alg_values_supported","display_values_supported","claims_supported","ensureString","variableName","ensureNumber","requiredStrings","requiredNumbers","forEach","express","bodyParser","routes","validateConfig","e","console","red","exit","cyan","use","urlencoded","extended","listen"],"sourceRoot":""}